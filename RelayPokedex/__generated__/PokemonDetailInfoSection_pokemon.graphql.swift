// Auto-generated by relay-compiler. Do not edit.

import Relay

struct PokemonDetailInfoSection_pokemon {
    var fragmentPointer: FragmentPointer

    init(key: PokemonDetailInfoSection_pokemon_Key) {
        fragmentPointer = key.fragment_PokemonDetailInfoSection_pokemon
    }

    static var node: ReaderFragment {
        ReaderFragment(
            name: "PokemonDetailInfoSection_pokemon",
            type: "Pokemon",
            selections: [
                .field(ReaderScalarField(
                    name: "name"
                )),
                .field(ReaderScalarField(
                    name: "number"
                )),
                .field(ReaderScalarField(
                    name: "classification"
                )),
                .field(ReaderLinkedField(
                    name: "weight",
                    concreteType: "PokemonDimension",
                    plural: false,
                    selections: [
                        .field(ReaderScalarField(
                            name: "minimum"
                        )),
                        .field(ReaderScalarField(
                            name: "maximum"
                        ))
                    ]
                )),
                .field(ReaderLinkedField(
                    name: "height",
                    concreteType: "PokemonDimension",
                    plural: false,
                    selections: [
                        .field(ReaderScalarField(
                            name: "minimum"
                        )),
                        .field(ReaderScalarField(
                            name: "maximum"
                        ))
                    ]
                ))
            ])
    }
}


extension PokemonDetailInfoSection_pokemon {
    struct Data: Decodable {
        var name: String?
        var number: String?
        var classification: String?
        var weight: PokemonDimension_weight?
        var height: PokemonDimension_height?

        struct PokemonDimension_weight: Decodable {
            var minimum: String?
            var maximum: String?
        }

        struct PokemonDimension_height: Decodable {
            var minimum: String?
            var maximum: String?
        }
    }
}

protocol PokemonDetailInfoSection_pokemon_Key {
    var fragment_PokemonDetailInfoSection_pokemon: FragmentPointer { get }
}

extension PokemonDetailInfoSection_pokemon: Relay.Fragment {}
