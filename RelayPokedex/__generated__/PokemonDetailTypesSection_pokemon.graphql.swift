// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct PokemonDetailTypesSection_pokemon {
    public var fragmentPointer: FragmentPointer

    public init(key: PokemonDetailTypesSection_pokemon_Key) {
        fragmentPointer = key.fragment_PokemonDetailTypesSection_pokemon
    }

    public static var node: ReaderFragment {
        ReaderFragment(
            name: "PokemonDetailTypesSection_pokemon",
            type: "Pokemon",
            selections: [
                .field(ReaderScalarField(
                    name: "types"
                )),
                .field(ReaderScalarField(
                    name: "resistant"
                )),
                .field(ReaderScalarField(
                    name: "weaknesses"
                ))
            ]
        )
    }
}

extension PokemonDetailTypesSection_pokemon {
    public struct Data: Decodable {
        public var types: [String?]?
        public var resistant: [String?]?
        public var weaknesses: [String?]?
    }
}

public protocol PokemonDetailTypesSection_pokemon_Key {
    var fragment_PokemonDetailTypesSection_pokemon: FragmentPointer { get }
}

extension PokemonDetailTypesSection_pokemon: Relay.Fragment {}

#if canImport(RelaySwiftUI)
import RelaySwiftUI

extension PokemonDetailTypesSection_pokemon_Key {
    public func asFragment() -> RelaySwiftUI.Fragment<PokemonDetailTypesSection_pokemon> {
        RelaySwiftUI.Fragment<PokemonDetailTypesSection_pokemon>(self)
    }
}
#endif